name: Integration Tests

on: 
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * 0' # weekly

env:
  GO111MODULE: on
  CONSUL_VERSION: 1.9.3
  ETCD_VERSION: 3.4.0
  VAULT_VERSION: 1.6.2
  DYNAMODB_VERSION: latest
  ZOOKEEPER_VERSION: 3.4.14
  RANCHER_VERSION: 0.6.0

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.6
      - name: Build and Install
        run: |
          make build
          sudo make install

      - name: Install Dependencies
        run: |
          sudo apt-get -q update
          sudo apt-get install -y curl wget unzip python3-pip

      - name: Install Consul
        run: |
          wget -q https://releases.hashicorp.com/consul/${CONSUL_VERSION}/consul_${CONSUL_VERSION}_linux_amd64.zip
          sudo unzip -d /usr/local/bin consul_${CONSUL_VERSION}_linux_amd64.zip
          consul agent -server -bootstrap-expect 1 -data-dir /tmp/consul -bind 127.0.0.1 &

      - name: Test Consul
        run: |
          integration/consul/test.sh
          integration/expect/check.sh

      - name: Setup Java
        uses: actions/setup-java@v2.5.0
        with:
          distribution: 'adopt'
          java-version: '13' # The JDK version to make available on the path.
          java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
          architecture: x64 # (x64 or x86) - defaults to x64

      - name: Install DynamoDB
        run: |
          sudo pip install awscli
          mkdir /tmp/dynamodb
          wget -q -O - https://s3-us-west-2.amazonaws.com/dynamodb-local/dynamodb_local_${DYNAMODB_VERSION}.tar.gz | tar xz --directory /tmp/dynamodb
          java -Djava.library.path=/tmp/dynamodb/DynamoDBLocal_lib -jar /tmp/dynamodb/DynamoDBLocal.jar -inMemory &
  
      - name: Test DynamoDB
        run: |
          integration/dynamodb/test.sh
          integration/expect/check.sh

      - name: Test Env
        run: |
          integration/env/test.sh
          integration/expect/check.sh

      - name: Install etcd
        run: |
          wget -q https://storage.googleapis.com/etcd/v${ETCD_VERSION}/etcd-v${ETCD_VERSION}-linux-amd64.tar.gz
          tar xzf etcd-v${ETCD_VERSION}-linux-amd64.tar.gz
          sudo mv etcd-v${ETCD_VERSION}-linux-amd64/etcd /usr/local/bin/
          sudo mv etcd-v${ETCD_VERSION}-linux-amd64/etcdctl /usr/local/bin/
          unset ETCD_VERSION
          etcd &

      - name: Test etcd
        run: |
          integration/etcd/test.sh
          integration/expect/check.sh

      - name: Test File
        run: |
          integration/file/test_yaml.sh
          integration/expect/check.sh
          integration/file/test_json.sh
          integration/expect/check.sh

      - name: Install Rancher
        run: |
          wget -q https://github.com/rancher/rancher-metadata/releases/download/v${RANCHER_VERSION}/rancher-metadata.tar.gz
          mkdir -p ./rancher-metadata
          tar xzf rancher-metadata.tar.gz --strip-components=1 -C ./rancher-metadata
          sudo mv ./rancher-metadata/bin/rancher-metadata /usr/local/bin/

      - name: Test Rancher
        run: |
          integration/rancher/test.sh
          integration/expect/check.sh

      - name: Install Redis
        run: |
          sudo apt-get install -y redis-server
          redis &

      - name: Test Redis
        run: |
          integration/redis/test.sh
          integration/expect/check.sh

      - name: Install Vault
        run: |
          wget -q https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip
          sudo unzip -d /usr/local/bin vault_${VAULT_VERSION}_linux_amd64.zip
          vault server -dev &

      - name: Test Vault V1
        run: |
          integration/vault-v1/test.sh
          integration/expect/check.sh
        env:
          VAULT_ADDR: http://127.0.0.1:8200

      - name: Test Vault V2
        run: |
          integration/vault-v2/test.sh
          integration/expect/check.sh
        env:
          VAULT_ADDR: http://127.0.0.1:8200

      - name: Install Zookeeper
        run: |
          wget -q https://archive.apache.org/dist/zookeeper/zookeeper-${ZOOKEEPER_VERSION}/zookeeper-${ZOOKEEPER_VERSION}.tar.gz
          tar xzf zookeeper-${ZOOKEEPER_VERSION}.tar.gz
          mkdir /tmp/zookeeper && cp integration/zookeeper/zoo.cfg zookeeper-${ZOOKEEPER_VERSION}/conf/zoo.cfg
          zookeeper-${ZOOKEEPER_VERSION}/bin/zkServer.sh start

      - name: Test Zookeeper
        run: |
          integration/zookeeper/test.sh
          integration/expect/check.sh
